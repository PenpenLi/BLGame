{
  "code": "export function array_uniq(array) {\r\n    var temp = [];\r\n    var index = [];\r\n    var l = array.length;\r\n    for (var i = 0; i < l; i++) {\r\n        for (var j = i + 1; j < l; j++) {\r\n            if (array[i] === array[j]) {\r\n                i++;\r\n                j = i;\r\n            }\r\n        }\r\n        temp.push(array[i]);\r\n        index.push(i);\r\n    }\r\n    return temp;\r\n}\r\nexport const isJsonStr = (str) => {\r\n    if (typeof str === \"string\") {\r\n        try {\r\n            let obj = JSON.parse(str);\r\n            if (typeof obj == 'object' && obj) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\nexport const roundRectPath = (x, y, w, h, r) => {\r\n    return [\r\n        [\"moveTo\", x + r, 0],\r\n        [\"lineTo\", x + w - r, 0],\r\n        [\"arcTo\", x + w, y, x + w, y + r, r],\r\n        [\"lineTo\", x + w, y + h - r],\r\n        [\"arcTo\", x + w, y + h, x + w - r, y + h, r],\r\n        [\"lineTo\", x + r, y + h],\r\n        [\"arcTo\", x, y + h, x, y + h - r, r],\r\n        [\"lineTo\", x, y + r],\r\n        [\"arcTo\", x, y, x + r, y, r],\r\n        [\"closePath\"]\r\n    ];\r\n};\r\nexport const formatDate = (date = null) => {\r\n    if (date === null)\r\n        date = new Date();\r\n    let y = date.getFullYear();\r\n    let m = date.getMonth() + 1;\r\n    let d = date.getDate();\r\n    return y + '-' + (m < 10 ? '0' + m : m) + '-' + (d < 10 ? '0' + d : d);\r\n};\r\nexport const add3dTo2d = (father, meshSpr, x, y) => {\r\n    var scene = new Laya.Scene3D();\r\n    father.addChild(scene);\r\n    var camera = new Laya.Camera(1, 1, 1000);\r\n    scene.addChild(camera);\r\n    camera.transform.rotate(new Laya.Vector3(-15, 0, 0), false, false);\r\n    camera.orthographic = true;\r\n    camera.orthographicVerticalSize = 1;\r\n    camera.clearFlag = Laya.BaseCamera.CLEARFLAG_DEPTHONLY;\r\n    var directionLight = new Laya.DirectionLight();\r\n    scene.addChild(directionLight);\r\n    directionLight.intensity = 1;\r\n    directionLight.color = new Laya.Vector3(1, 0.96, 0.84);\r\n    directionLight.transform.rotate(new Laya.Vector3(-45, 0, 0));\r\n    let pos = new Laya.Vector3(x, y, 0);\r\n    let _translate = new Laya.Vector3(0, 0, 0);\r\n    scene.addChild(meshSpr);\r\n    camera.convertScreenCoordToOrthographicCoord(pos, _translate);\r\n    meshSpr.transform.position = _translate;\r\n    meshSpr.transform.rotationEuler = new Laya.Vector3(0, 45, 0);\r\n};\r\nexport const hex_to_ten = (hex) => {\r\n    let decimalValue = 0;\r\n    for (let i = 0; i < hex.length; i++) {\r\n        let hexChar = hex.charAt(i);\r\n        decimalValue = decimalValue * 16 + hexCharToDecimal(hexChar);\r\n    }\r\n    return decimalValue;\r\n};\r\nexport const hexCharToDecimal = (char) => {\r\n    let asc_a = \"a\".charCodeAt(0);\r\n    let asc_f = \"f\".charCodeAt(0);\r\n    let asc_A = \"A\".charCodeAt(0);\r\n    let asc_F = \"F\".charCodeAt(0);\r\n    let asc_0 = \"0\".charCodeAt(0);\r\n    let asc_9 = \"9\".charCodeAt(0);\r\n    let asc_char = char.charCodeAt(0);\r\n    if (asc_char >= asc_a && asc_char <= asc_f) {\r\n        return 10 + asc_char - asc_a;\r\n    }\r\n    else if (asc_char >= asc_A && asc_char <= asc_F) {\r\n        return 10 + asc_char - asc_A;\r\n    }\r\n    else if (asc_char >= asc_0 && asc_char <= asc_9) {\r\n        return asc_char - asc_0;\r\n    }\r\n    else {\r\n        throw Error(\"转换时字符错误：\" + char);\r\n    }\r\n};\r\n",
  "references": []
}
